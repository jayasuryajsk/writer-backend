version: "3.8"

services:
  traefik:
    image: traefik:latest
    restart: always
    command:
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--providers.docker=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge=true"
      - "--certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.myresolver.acme.email=admin@example.com"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.myresolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik_letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1g"

  app:
    image: app:latest
    restart: always
    labels:
      - "traefik.http.routers.app.rule=Host(`example.com`)"
      - "traefik.http.services.app.loadbalancer.server.port=8000"
      - "traefik.http.routers.app.tls.certresolver=myresolver"
    volumes:
      - crash_store:/app/crash_store
      - backup_data:/app/backup_data
    depends_on:
      - db
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1g"

  db:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: example
      POSTGRES_PASSWORD: example
      POSTGRES_DB: example
    volumes:
      - db_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "1g"

volumes:
  db_data:
  crash_store:
  backup_data:
  traefik_letsencrypt:
